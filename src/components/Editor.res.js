'use client';
// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as ReacttRace from "../shared/ReacttRace.res.js";
import * as JsxRuntime from "react/jsx-runtime";
import * as Caml_js_exceptions from "rescript/lib/es6/caml_js_exceptions.js";
import ReactCodemirror from "@uiw/react-codemirror";
import * as LangJavascript from "@codemirror/lang-javascript";
import * as CodemirrorThemeTokyoNightDay from "@uiw/codemirror-theme-tokyo-night-day";

var sample = "\nlet C x =\n  let (s, setS) = useState x in\n  if s = 42 then\n    setS (fun s -> s + 1);\n  view [()]\n;;\nlet D _ =\n  let (s, setS) = useState true in\n  useEffect (setS (fun _ -> false));\n  view [C 42]\n;;\nview [D (), 0]\n".trim();

var javascript = Curry._1(LangJavascript.javascript, undefined);

function reacttrace(value) {
  try {
    return ReacttRace.run(0, value);
  }
  catch (raw_exn){
    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
    if (exn.RE_EXN_ID === Js_exn.$$Error) {
      return "Runtime error";
    }
    throw exn;
  }
}

function Editor(props) {
  var match = React.useState(function () {
        return sample;
      });
  var setValue = match[1];
  var value = match[0];
  var match$1 = React.useState(function () {
        return reacttrace(value);
      });
  var setRecordings = match$1[1];
  var onChange = function (value) {
    setRecordings(function (param) {
          return reacttrace(value);
        });
    setValue(function (param) {
          return value;
        });
  };
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx(ReactCodemirror, {
                      value: value,
                      mode: "ocaml",
                      height: "300px",
                      onChange: onChange,
                      extensions: [
                        CodemirrorThemeTokyoNightDay.tokyoNightDay,
                        javascript
                      ]
                    }),
                JsxRuntime.jsx("div", {
                      children: match$1[0],
                      className: "whitespace-pre-wrap"
                    })
              ],
              className: "flex flex-col gap-4"
            });
}

var make = Editor;

export {
  sample ,
  javascript ,
  reacttrace ,
  make ,
}
/* sample Not a pure module */
